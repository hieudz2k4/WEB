{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($data.count), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.increment && $options.increment(...args))\n  }, \"increment\")]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","count","onClick","_cache","args","$options","increment"],"sources":["/Users/macbook/Desktop/Tài Liệu/Bài Tập Lớn /Software Engineering/frontend/src/App.vue"],"sourcesContent":["<template>\n    <div id=\"app\">\n        <h1>{{ count }}</h1>\n        <button v-on:click=\"increment\">increment</button>\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                count: 0\n            }\n        },\n        methods: {\n            increment() {\n                this.count++\n            }\n        }\n    }\n</script>\n\n<style>\n.title {\n    color: red;\n}\n</style>"],"mappings":";;EACSA,EAAE,EAAC;AAAK;;uBAAbC,mBAAA,CAGM,OAHNC,UAGM,GAFFC,mBAAA,CAAoB,YAAAC,gBAAA,CAAbC,KAAA,CAAAC,KAAK,kBACZH,mBAAA,CAAiD;IAApCI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,WAAS,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}